---
title: "Stat 641 Project"
author: \small Atish Panday, \small Sagar Yogesh Soneji, \small Roheet Raviraj Bakare, \small Naisargi Priyanath Patel, \small Nikhil Varma Yakama
format: pdf
editor: visual
---

```{r}
# Loading the libraries using pacman
library(pacman)
p_load(dplyr, boot, caret, skimr, yardstick, ggplot2, pROC)
```


```{r}
# The original data is saved as wine.csv
original_data <- read.csv("./wine.csv")
original_data$quality_val <- 
  as.factor(ifelse(original_data$quality == "good", 1, 0))
skim(original_data)
```

```{r}
# Check the balance of classes
summary(original_data$quality_val)
```


```{r}
# Alcohol Histogram
ggplot(original_data, aes(alcohol, fill = quality_val)) +
  geom_histogram(col = "black", binwidth = 0.5) +
  labs(title = "Alcohol Histogram",
       x = "Alcohol",
       y = "Count",
       col = "Quality of Wine") +
  theme_minimal()

# Residual Sugar Histogram
ggplot(original_data, aes(residual.sugar, fill = quality_val)) +
  geom_histogram(col = "black", binwidth = 0.5) +
  labs(title = "Residual Sugar Histogram",
       x = "Residual Sugar",
       y = "Count",
       col = "Quality of Wine") +
  theme_minimal()

# Fixed Acidity Histogram
ggplot(original_data, aes(fixed.acidity, fill = quality_val)) +
  geom_histogram(col = "black", binwidth = 0.5) +
  labs(title = "Fixed Acidity Histogram",
       x = "Fixed Acidity",
       y = "Count",
       col = "Quality of Wine") +
  theme_minimal()

# pH Histogram
ggplot(original_data, aes(pH, fill = quality_val)) +
  geom_histogram(col = "black", binwidth = 0.1) +
  labs(title = "pH Histogram",
       x = "pH",
       y = "Count",
       col = "Quality of Wine") +
  theme_minimal()

# Chlorides Histogram
ggplot(original_data, aes(chlorides, fill = quality_val)) +
  geom_histogram(col = "black", binwidth = 0.025) +
  labs(title = "Chlorides Histogram",
       x = "Chlorides",
       y = "Count",
       col = "Quality of Wine") +
  theme_minimal()

# Total Sulfur Dioxide Histogram
ggplot(original_data, aes(total.sulfur.dioxide, fill = quality_val)) +
  geom_histogram(col = "black", binwidth = 10) +
  labs(title = "Total Sulfur Dioxide Histogram",
       x = "Total Sulfur Dioxide",
       y = "Count",
       col = "Quality of Wine") +
  theme_minimal()
```


```{r}
# Partition the original data into training and testing sets
index <- createDataPartition(original_data$quality_val, p = 0.8, list = FALSE)
train_data <- original_data[index, ]
test_data <- original_data[-index, ]
```


```{r}
# Training the logistic regression model
model <- glm(quality_val ~ (. - quality), train_data, family = "binomial")
```

```{r}
# Testing our model on the test dataset
test_predictions <- predict(model, newdata = test_data, type = "response")
classes <- ifelse(test_predictions > 0.5, 1, 0)
conf_matrix <- table(classes, test_data$quality_val)
test_accuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)
test_accuracy
```


```{r}
# Bootstrapping the test dataset and returning the accuracies of the 
# bootstrapped samples
pred_func <- function(data, index) {
  data$quality_val <- data$quality_val[index]
  predictions <- predict(model, newdata = data, type = "response")
  classes <- ifelse(predictions > 0.5, 1, 0)
  conf_matrix <- table(classes, data$quality_val)
  accuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)
  return (accuracy)
}

wine.boot <- boot(test_data, pred_func, R = 2000)
mean(wine.boot$t)
```


```{r}
# Normality of accuracy of bootstrap samples
plot(wine.boot)
```

```{r}
# ROC curve
roc_curve <- roc(test_data$quality_val, test_predictions)
plot(roc_curve, main = "ROC Curve", col = "blue", lwd = 2)
text(0.5, 
     0.2, 
     paste("AUC = ", round(auc(roc_curve), 4)), 
     col = "red", 
     cex = 1.2)
legend("bottomright", legend = "Logistic Regression", col = "blue", lwd = 2)
```

